{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2022-06-02T20:49:56.863Z",
    "end": "2022-06-02T20:50:14.565Z",
    "duration": 17702,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "030c2906-a290-442f-a6cb-bced12c994f0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7dfc9ec5-c151-465b-bd30-cf501a684760",
          "title": "Exam modeline ait CRUD işlemleri",
          "fullFile": "/home/abdullah/Node/kpss-api/src/api/v1/exam/exam.spec.js",
          "file": "/src/api/v1/exam/exam.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Exam modeline ait CRUD işlemleri\"",
              "fullTitle": "Exam modeline ait CRUD işlemleri \"before each\" hook in \"Exam modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "connectDB();\n//+ Teste başlamadan önce veritabanından questions koleksiyonunu siliyoruz.\n//  mongoose.connection.collections.questions.drop();",
              "err": {},
              "uuid": "8a37b4ca-ab1c-47a7-8f83-902276d13b89",
              "parentUUID": "7dfc9ec5-c151-465b-bd30-cf501a684760",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Exam modeline ait CRUD işlemleri\"",
              "fullTitle": "Exam modeline ait CRUD işlemleri \"after each\" hook in \"Exam modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//+ Her testten sonra veritabanı bağlantısını kapatıyoruz.\ndisconnectDB();",
              "err": {},
              "uuid": "5e702b20-2a89-4afc-832b-1aafee1a52fe",
              "parentUUID": "7dfc9ec5-c151-465b-bd30-cf501a684760",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "GET /getAllExam - Bütün sınavları getir..",
              "fullTitle": "Exam modeline ait CRUD işlemleri GET /getAllExam - Bütün sınavları getir..",
              "timedOut": false,
              "duration": 2669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(`${questionURL}/getAllExam`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "eebf5dbe-0d6d-4c5c-9644-c4b31b631d20",
              "parentUUID": "7dfc9ec5-c151-465b-bd30-cf501a684760",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eebf5dbe-0d6d-4c5c-9644-c4b31b631d20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2669,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "9c081e0a-9c9f-4534-a068-56c8ac66a648",
          "title": "Question modeline ait CRUD işlemleri",
          "fullFile": "/home/abdullah/Node/kpss-api/src/api/v1/question/question.spec.js",
          "file": "/src/api/v1/question/question.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "connectDB();\n//+ Teste başlamadan önce veritabanından questions koleksiyonunu siliyoruz.\n// mongoose.connection.collections.questions.drop();",
              "err": {},
              "uuid": "e43c21d9-e944-469c-8d7c-e63564e2a617",
              "parentUUID": "9c081e0a-9c9f-4534-a068-56c8ac66a648",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//+ Her testten sonra veritabanı bağlantısını kapatıyoruz.\ndisconnectDB();",
              "err": {},
              "uuid": "eb7e29c9-dbe0-4ff3-b1fc-6b7e95c97904",
              "parentUUID": "9c081e0a-9c9f-4534-a068-56c8ac66a648",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "GET /getAllQuestion - Bütün soruları getir..",
              "fullTitle": "Question modeline ait CRUD işlemleri GET /getAllQuestion - Bütün soruları getir..",
              "timedOut": true,
              "duration": 15003,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(`${questionURL}/getAllQuestion`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.should.be.a('array');\n    done();\n  });",
              "err": {
                "message": "Error: Timeout of 15000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abdullah/Node/kpss-api/src/api/v1/question/question.spec.js)",
                "estack": "Error: Timeout of 15000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abdullah/Node/kpss-api/src/api/v1/question/question.spec.js)\n    at listOnTimeout (node:internal/timers:559:17)\n    at processTimers (node:internal/timers:502:7)",
                "diff": null
              },
              "uuid": "2f2b066a-2dec-47a4-9867-6871eec01f1a",
              "parentUUID": "9c081e0a-9c9f-4534-a068-56c8ac66a648",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2f2b066a-2dec-47a4-9867-6871eec01f1a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
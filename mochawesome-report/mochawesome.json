{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-05-25T20:01:41.551Z",
    "end": "2022-05-25T20:01:44.166Z",
    "duration": 2615,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "817b2728-2b75-4322-b153-babbef2291e5",
      "title": "",
      "fullFile": "/home/abdullah/Node/kpss-api/src/api/v1/question/question.spec.js",
      "file": "/src/api/v1/question/question.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
          "title": "Question modeline ait CRUD işlemleri",
          "fullFile": "/home/abdullah/Node/kpss-api/src/api/v1/question/question.spec.js",
          "file": "/src/api/v1/question/question.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "connectDB();\n//+ Teste başlamadan önce veritabanından questions koleksiyonunu siliyoruz.\nmongoose.connection.collections.questions.drop();",
              "err": {},
              "uuid": "9986fb1e-bc25-4eb2-aab8-eca0a34cb9f7",
              "parentUUID": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//+ Her testten sonra veritabanı bağlantısını kapatıyoruz.\ndisconnectDB();",
              "err": {},
              "uuid": "404d9a9b-4643-48d7-b6d2-b137a5180e4d",
              "parentUUID": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "POST /createQuestion - Yeni soru oluştur.",
              "fullTitle": "Question modeline ait CRUD işlemleri POST /createQuestion - Yeni soru oluştur.",
              "timedOut": false,
              "duration": 2563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(`${questionURL}/createQuestion`)\n  .send(question)\n  .end((err, response) => {\n    response.should.have.status(201);\n    done();\n  });",
              "err": {},
              "uuid": "c48ca101-3057-4d1b-85a7-b4c2e8ef3d96",
              "parentUUID": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /getAllQuestion - Bütün soruları getir..",
              "fullTitle": "Question modeline ait CRUD işlemleri GET /getAllQuestion - Bütün soruları getir..",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(`${questionURL}/getAllQuestion`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "aec7aee1-f7c1-49d9-8485-633bb2028f7b",
              "parentUUID": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT /updateQuestion - Id bilgisine göre soruyu günceller. ",
              "fullTitle": "Question modeline ait CRUD işlemleri PUT /updateQuestion - Id bilgisine göre soruyu günceller. ",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const generatedQuestion = new Question(question);\nconst result = await generatedQuestion.save();\nconnectDB();\nchai\n  .request(app)\n  .put(`${questionURL}/updateQuestion/${result.id}`)\n  .send({\n    title: 'f(x)=2*3 ne yapar',\n    answerList: ['Akdeniz', 'Karadeniz', 'İç Anadolu', 'Doğu Anadolu'],\n    correctAnswerIndex: 0,\n    category: 'Matematik',\n  })\n  .set('content-type', 'application/json')\n  .end((err, response) => {\n    response.should.have.status(200);\n  });\nawait delay(1000);",
              "err": {
                "message": "MongoNotConnectedError: MongoClient must be connected to perform this operation",
                "estack": "MongoNotConnectedError: MongoClient must be connected to perform this operation\n    at getTopology (node_modules/mongodb/lib/utils.js:282:11)\n    at /home/abdullah/Node/kpss-api/node_modules/mongodb/lib/operations/execute_operation.js:19:48\n    at maybePromise (node_modules/mongodb/lib/utils.js:409:5)\n    at executeOperation (node_modules/mongodb/lib/operations/execute_operation.js:16:37)\n    at Collection.insertOne (node_modules/mongodb/lib/collection.js:149:57)\n    at NativeCollection.<computed> [as insertOne] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:202:33)\n    at model.Model.$__handleSave (node_modules/mongoose/lib/model.js:297:33)\n    at model.Model.$__save (node_modules/mongoose/lib/model.js:376:8)\n    at /home/abdullah/Node/kpss-api/node_modules/kareem/index.js:276:16\n    at /home/abdullah/Node/kpss-api/node_modules/kareem/index.js:78:15\n    at processTicksAndRejections (node:internal/process/task_queues:78:11)",
                "diff": null
              },
              "uuid": "82038c07-5571-479b-91b2-38fae3644f26",
              "parentUUID": "a765c201-a860-4ef6-ace8-24c5617ca0a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c48ca101-3057-4d1b-85a7-b4c2e8ef3d96",
            "aec7aee1-f7c1-49d9-8485-633bb2028f7b"
          ],
          "failures": [
            "82038c07-5571-479b-91b2-38fae3644f26"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-24T18:44:38.267Z",
    "end": "2022-05-24T18:44:40.692Z",
    "duration": 2425,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "44972b93-5d57-4e9b-a738-485fcfd3e0fb",
      "title": "",
      "fullFile": "/home/abdullah/Node/kpss-api/src/routes/v1/question/question.spec.js",
      "file": "/src/routes/v1/question/question.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7de01609-2309-4bde-90ee-cf7f5c4acfdd",
          "title": "Question modeline ait CRUD işlemleri",
          "fullFile": "/home/abdullah/Node/kpss-api/src/routes/v1/question/question.spec.js",
          "file": "/src/routes/v1/question/question.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"before each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "connectDB();\n//+ Teste başlamadan önce veritabanından questions koleksiyonunu siliyoruz.\nmongoose.connection.collections.questions.drop();",
              "err": {},
              "uuid": "13f8fb6d-d9fd-48e1-abf3-f8fd5f2e176c",
              "parentUUID": "7de01609-2309-4bde-90ee-cf7f5c4acfdd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "fullTitle": "Question modeline ait CRUD işlemleri \"after each\" hook in \"Question modeline ait CRUD işlemleri\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//+ Her testten sonra veritabanı bağlantısını kapatıyoruz.\ndisconnectDB();",
              "err": {},
              "uuid": "b2065389-62de-4bc6-abce-5df7086fb9fd",
              "parentUUID": "7de01609-2309-4bde-90ee-cf7f5c4acfdd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "POST /createQuestion - Yeni soru oluştur.",
              "fullTitle": "Question modeline ait CRUD işlemleri POST /createQuestion - Yeni soru oluştur.",
              "timedOut": false,
              "duration": 2379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(`${questionURL}/createQuestion`)\n  .send(question)\n  .end((err, response) => {\n    response.should.have.status(201);\n    done();\n  });",
              "err": {},
              "uuid": "62886ab5-c897-4702-8220-c6387bb1aa03",
              "parentUUID": "7de01609-2309-4bde-90ee-cf7f5c4acfdd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /getAllQuestion - Bütün soruları getir..",
              "fullTitle": "Question modeline ait CRUD işlemleri GET /getAllQuestion - Bütün soruları getir..",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(`${questionURL}/getAllQuestion`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "452cfb0a-36da-40d8-b28a-690c4439724d",
              "parentUUID": "7de01609-2309-4bde-90ee-cf7f5c4acfdd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62886ab5-c897-4702-8220-c6387bb1aa03",
            "452cfb0a-36da-40d8-b28a-690c4439724d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}